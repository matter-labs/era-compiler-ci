name: Integration Tests

on:
  workflow_call:
    inputs:
      compiler-tester-ref:
        type: string
        required: false
        description: 'Compiler tester revision to use.'
      llvm-ref:
        type: string
        required: false
        description: 'LLVM revision to use.'
      path:
        type: string
        required: false
        default: ''
        description: 'Path filter for integration tests execution. For example: `tests/solidity/`.'
      target-machine:
        type: string
        required: false
        default: ''
        description: 'Target machine passed via `--target` for era-compiler-tester. Available arguments: `eravm`, `evm`. Use `default` or `` to skip this parameter.'
      extra-args:
        type: string
        required: false
        default: ''
        description: 'Extra arguments for era-compiler-tester.'
      custom-solc-run-id:
        type: string
        required: false
        default: ''
        description: 'run id of custom zksync solc artifact to download.'
      custom-solc-version:
        type: string
        required: false
        default: ''
        description: 'custom solc version to use for integration tests'
      ccache-key-type:
        type: string
        required: false
        default: 'dynamic'
        description: 'Type of ccache key: `static` - rotate each month, or `dynamic` - rotate with each update of `LLVM.lock`.'
      save-ccache:
        type: string
        required: false
        default: 'false'
        description: 'Whether to save ccache after the build.'
      compiler-tester-repo:
        type: string
        required: false
        default: 'matter-labs/era-compiler-tester'
        description: 'Compiler tester repository to use. Required for forks testing.'
      compiler-llvm-repo:
        type: string
        required: false
        default: 'matter-labs/era-compiler-llvm'
        description: 'Compiler LLVM repository to use. Required for forks testing.'

jobs:

  integration-tests:
    runs-on: [ci-runner-compiler, Linux]
    timeout-minutes: 720
    container:
      image: ghcr.io/matter-labs/zksync-llvm-runner:latest
      options: -m 110g
    name: Integration Tests ${{ inputs.target-machine || 'default' }}
    steps:

      - name: Checkout compiler-tester
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.compiler-tester-repo }}
          ref: ${{ inputs.compiler-tester-ref || '' }}
          submodules: recursive

      - name: Checkout LLVM
        if: inputs.llvm-ref != ''
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.compiler-llvm-repo }}
          ref: ${{ inputs.llvm-ref }}
          path: llvm

      # An issue prevents to correctly use the same version of composite actions from `workflow_call`
      # https://github.com/actions/toolkit/issues/1264
      # for now, it will always be taken from the latest main
      - name: Build LLVM
        uses: matter-labs/era-compiler-ci/.github/actions/build-llvm@main
        with:
          enable-tests: true
          enable-assertions: true
          clone-llvm: ${{ inputs.llvm-ref == '' && 'true' || 'false' }}
          ccache-key-type: ${{ inputs.ccache-key-type }}

      - name: Build compiler-tester
        run: cargo build --verbose --release --bin 'compiler-tester'

      - name: Build compilers
        env:
          CARGO_CHECKOUT_DIR: /usr/local/cargo/git/checkouts
        run: |
          cargo build --verbose --release \
            --manifest-path ${CARGO_CHECKOUT_DIR}/era-compiler-solidity-*/*/Cargo.toml \
            --target-dir './target-zksolc/'
          cargo build --verbose --release \
            --manifest-path ${CARGO_CHECKOUT_DIR}/era-compiler-vyper-*/*/Cargo.toml \
            --target-dir './target-zkvyper/'

      - name: Download custom solc
        if: inputs.custom-solc-run-id != '' && inputs.custom-solc-version != ''
        uses: actions/download-artifact@v4
        with:
          pattern: solc*
          path: ./solc-custom-bin/
          run-id: ${{ inputs.custom-solc-run-id }}
          merge-multiple: true

      - name: Prepare custom solc
        if: inputs.custom-solc-run-id != '' && inputs.custom-solc-version != ''
        run: |
          mkdir -p ./solc-bin
          chmod a+x "./solc-custom-bin/solc-${{ inputs.custom-solc-version}}-candidate"
          mv "./solc-custom-bin/solc-${{ inputs.custom-solc-version}}-candidate" \
            "./solc-bin/solc-${{ inputs.custom-solc-version}}"
          echo "Testing with custom solc from run ${{ inputs.custom-solc-run-id }}"
          echo $(./solc-bin/solc-${{ inputs.custom-solc-version}} --version)

      - name: Run integration tests
        shell: bash -ex {0}
        run: |
          if [[ -n "${{ inputs.target-machine }}" && "${{ inputs.target-machine }}" != "default" ]]; then
            TARGET="--target ${{ inputs.target-machine }}"
            # Always use upstream solc for EVM target for now
            if [[ "${{ inputs.target-machine }}" == "EVM" ]]; then
              TOOLCHAIN="--toolchain solc"
            fi
          fi
          ./target/release/compiler-tester ${TARGET} ${TOOLCHAIN} \
            --zksolc './target-zksolc/release/zksolc' \
            --zkvyper './target-zkvyper/release/zkvyper' \
            --path '${{ inputs.path }}'${EVM_MODE} ${{ inputs.extra-args }}

      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        if: (failure() || success()) && (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork)
        with:
          job_name: Integration Tests ${{ inputs.target-machine || 'default' }}
          status: ${{ job.status }}
          fields: repo,commit,author,action,eventName,ref,workflow,job,took,pullRequest
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
